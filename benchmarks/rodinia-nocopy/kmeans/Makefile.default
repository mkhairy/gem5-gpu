CSRC = cluster.c getopt.c kmeans.c kmeans_clustering.c rmse.c
CUSRC = kmeans_cuda.cu
EXECUTABLE = kmeans
OPTS =
INC = -I$(NVIDIA_CUDA_SDK_LOCATION)/common/inc -I$(CUDAHOME)/include
LIBS = -L$(NVIDIA_CUDA_SDK_LOCATION)/lib -lcutil_x86_64

ifeq ($(BUILD_OCELOT),true)
	BUILD_EXE = $(EXECUTABLE).ocelot
	OPTS = -arch=sm_20
	LIBS += `OcelotConfig -l`
else
	BUILD_EXE = $(EXECUTABLE)
endif

OBJS = $(notdir $(CSRC:.c=.o))

all: $(OBJS)
	nvcc -cuda $(OPTS) $(CUSRC) $(INC) $(LIBS)
	g++ -c *.cpp $(INC) $(OPTS)
	nvcc $(OPTS) -o $(BUILD_EXE) *.o $(LIBS)

$(OBJS): $(CSRC)
	gcc -c $(CSRC) $(OPTS)

clean:
	rm -f *.o *.cu.cpp $(BUILD_EXE)

cleancucpp:
	rm -f *.cu.cpp
