gem5 Simulator System.  http://gem5.org
gem5 is copyrighted software; use the --copyright option for details.

gem5 compiled Apr 12 2017 22:30:33
gem5 started Apr 17 2017 16:01:46
gem5 executing on tgrogers-pc02
command line: build/X86_VI_hammer_GPU/gem5.opt ../gem5-gpu/configs/se_fusion.py -h

Usage: se_fusion.py [options]

Options:
  -h, --help            show this help message and exit
  --clusters=CLUSTERS   Number of shader core clusters in the gpu that GPGPU-
                        sim is simulating
  --cores_per_cluster=CORES_PER_CLUSTER
                        Number of shader cores per cluster in the gpu that
                        GPGPU-sim is simulating
  --ctas_per_shader=CTAS_PER_SHADER
                        Number of simultaneous CTAs that can be scheduled to a
                        single shader
  --sc_l1_size=SC_L1_SIZE
                        size of l1 cache hooked up to each sc
  --sc_l2_size=SC_L2_SIZE
                        size of L2 cache divided by num L2 caches
  --sc_l1_assoc=SC_L1_ASSOC
                        associativity of l1 cache hooked up to each sc
  --sc_l2_assoc=SC_L2_ASSOC
                        associativity of L2 cache backing SC L1's
  --shMemDelay=SHMEMDELAY
                        delay to access shared memory in gpgpu-sim ticks
  --gpu_core_config=GPU_CORE_CONFIG
                        configure the GPU cores like ['Fermi', 'Maxwell']
  --kernel_stats        Dump statistics on GPU kernel boundaries
  --total-mem-size=TOTAL_MEM_SIZE
                        Total size of memory in system
  --gpu_l1_buf_depth=GPU_L1_BUF_DEPTH
                        Number of buffered L1 requests per shader
  --flush_kernel_end    Flush the L1s at the end of each kernel. (Only
                        VI_hammer)
  --gpu-core-clock=GPU_CORE_CLOCK
                        The frequency of GPU clusters (note: shaders operate
                        at double this frequency when modeling Fermi)
  --access-host-pagetable
  --split               Use split CPU and GPU cache hierarchies instead of
                        fusion
  --dev-numa-high-bit=DEV_NUMA_HIGH_BIT
                        High order address bit to use for device NUMA mapping.
  --num-dev-dirs=NUM_DEV_DIRS
                        In split hierarchies, number of device directories
  --gpu-mem-size=GPU_MEM_SIZE
                        In split hierarchies, amount of GPU memory
  --gpu_mem_ctl_latency=GPU_MEM_CTL_LATENCY
                        GPU memory controller latency in cycles
  --gpu_mem_freq=GPU_MEM_FREQ
                        GPU memory controller frequency
  --gpu_membus_busy_cycles=GPU_MEMBUS_BUSY_CYCLES
                        GPU memory bus busy cycles per data transfer
  --gpu_membank_busy_time=GPU_MEMBANK_BUSY_TIME
                        GPU memory bank busy time in ns (CL+tRP+tRCD+CAS)
  --gpu_warp_size=GPU_WARP_SIZE
                        Number of threads per warp, also functional units per
                        shader core/SM
  --gpu_atoms_per_subline=GPU_ATOMS_PER_SUBLINE
                        Maximum atomic ops to send per subline per access
  --gpu_threads_per_core=GPU_THREADS_PER_CORE
                        Maximum number of threads per GPU core (SM)
  --gpgpusim-config=GPGPUSIM_CONFIG
                        Path to the gpgpusim.config to use. This overrides the
                        gpgpusim.config template
  --gpu-l2-resource-stalls
  --gpu_tlb_entries=GPU_TLB_ENTRIES
                        Number of entries in GPU TLB. 0 implies infinite
  --gpu_tlb_assoc=GPU_TLB_ASSOC
                        Associativity of the L1 TLB. 0 implies infinite
  --pwc_size=PWC_SIZE   Capacity of the page walk cache
  --ce_buffering=CE_BUFFERING
                        Maximum cache lines buffered in the GPU CE. 0 implies
                        infinite
  --mem_ctl_latency=MEM_CTL_LATENCY
                        Memory controller latency in cycles
  --mem_freq=MEM_FREQ   Memory controller frequency
  --membus_busy_cycles=MEMBUS_BUSY_CYCLES
                        Memory bus busy cycles per data transfer
  --membank_busy_time=MEMBANK_BUSY_TIME
                        Memory bank busy time in ns (CL+tRP+tRCD+CAS)
  --list-cpu-types      List available CPU types
  --cpu-type=CPU_TYPE   type of cpu to run with
  --checker             
  -n NUM_CPUS, --num-cpus=NUM_CPUS
  --sys-voltage=SYS_VOLTAGE
                        Top-level voltage for blocks running at system
                        power supply
  --sys-clock=SYS_CLOCK
                        Top-level clock for blocks running at system
                        speed
  --cpu-clock=CPU_CLOCK
                        Clock for blocks running at CPU speed
  --smt                                        Only used if multiple programs
                        are specified. If true,                       then the
                        number of threads per cpu is same as the
                        number of programs.
  --list-mem-types      List available memory types
  --mem-type=MEM_TYPE   type of memory to use
  --mem-channels=MEM_CHANNELS
                        number of memory channels
  --mem-ranks=MEM_RANKS
                        number of memory ranks per channel
  --mem-size=MEM_SIZE   Specify the physical memory size (single memory)
  -l, --lpae            
  -V, --virtualisation  
  --memchecker          
  --external-memory-system=EXTERNAL_MEMORY_SYSTEM
                        use external ports of this port_type for caches
  --tlm-memory=TLM_MEMORY
                        use external port for SystemC TLM cosimulation
  --caches              
  --l2cache             
  --fastmem             
  --num-dirs=NUM_DIRS   
  --num-l2caches=NUM_L2CACHES
  --num-l3caches=NUM_L3CACHES
  --l1d_size=L1D_SIZE   
  --l1i_size=L1I_SIZE   
  --l2_size=L2_SIZE     
  --l3_size=L3_SIZE     
  --l1d_assoc=L1D_ASSOC
  --l1i_assoc=L1I_ASSOC
  --l2_assoc=L2_ASSOC   
  --l3_assoc=L3_ASSOC   
  --cacheline_size=CACHELINE_SIZE
  --ruby                
  -m TICKS, --abs-max-tick=TICKS
                        Run to absolute simulated tick specified including
                        ticks from a restored checkpoint
  --rel-max-tick=TICKS  Simulate for specified number of ticks relative to the
                        simulation start tick (e.g. if restoring a checkpoint)
  --maxtime=MAXTIME     Run to the specified absolute simulated time in
                        seconds
  -I MAXINSTS, --maxinsts=MAXINSTS
                        Total number of instructions to
                        simulate (default: run forever)
  --work-item-id=WORK_ITEM_ID
                        the specific work id for exit & checkpointing
  --num-work-ids=NUM_WORK_IDS
                        Number of distinct work item types
  --work-begin-cpu-id-exit=WORK_BEGIN_CPU_ID_EXIT
                        exit when work starts on the specified cpu
  --work-end-exit-count=WORK_END_EXIT_COUNT
                        exit at specified work end count
  --work-begin-exit-count=WORK_BEGIN_EXIT_COUNT
                        exit at specified work begin count
  --init-param=INIT_PARAM
                        Parameter available in simulation with m5
                        initparam
  --initialize-only     Exit after initialization. Do not simulate time.
                        Useful when gem5 is run as a library.
  --simpoint-profile    Enable basic block profiling for SimPoints
  --simpoint-interval=SIMPOINT_INTERVAL
                        SimPoint interval in num of instructions
  --take-simpoint-checkpoints=TAKE_SIMPOINT_CHECKPOINTS
                        <simpoint file,weight file,interval-length,warmup-
                        length>
  --restore-simpoint-checkpoint
                        restore from a simpoint checkpoint taken with --take-
                        simpoint-checkpoints
  --take-checkpoints=TAKE_CHECKPOINTS
                        <M,N> take checkpoints at tick M and every N ticks
                        thereafter
  --max-checkpoints=MAX_CHECKPOINTS
                        the maximum number of checkpoints to drop
  --checkpoint-dir=CHECKPOINT_DIR
                        Place all checkpoints in this absolute directory
  -r CHECKPOINT_RESTORE, --checkpoint-restore=CHECKPOINT_RESTORE
                        restore from checkpoint <N>
  --checkpoint-at-end   take a checkpoint at end of run
  --work-begin-checkpoint-count=WORK_BEGIN_CHECKPOINT_COUNT
                        checkpoint at specified work begin count
  --work-end-checkpoint-count=WORK_END_CHECKPOINT_COUNT
                        checkpoint at specified work end count
  --work-cpus-checkpoint-count=WORK_CPUS_CHECKPOINT_COUNT
                        checkpoint and exit when active cpu count is reached
  --restore-with-cpu=RESTORE_WITH_CPU
                        cpu type for restoring from a checkpoint
  --repeat-switch=REPEAT_SWITCH
                        switch back and forth between CPUs with period <N>
  -s STANDARD_SWITCH, --standard-switch=STANDARD_SWITCH
                        switch from timing to Detailed CPU after warmup period
                        of <N>
  -p PROG_INTERVAL, --prog-interval=PROG_INTERVAL
                        CPU Progress Interval
  -W WARMUP_INSTS, --warmup-insts=WARMUP_INSTS
                        Warmup period in total instructions (requires
                        --standard-switch)
  --bench=BENCH         base names for --take-checkpoint and --checkpoint-
                        restore
  -F FAST_FORWARD, --fast-forward=FAST_FORWARD
                        Number of instructions to fast forward before
                        switching
  -S, --simpoint        Use workload simpoints as an instruction offset for
                        --checkpoint-restore or --take-checkpoint.
  --at-instruction      Treat value of --checkpoint-restore or --take-
                        checkpoint as a                 number of
                        instructions.
  --spec-input=SPEC_INPUT
                        Input set size for SPEC CPU2000 benchmarks.
  --arm-iset=ARM_ISET   ARM instruction set.
  -c CMD, --cmd=CMD     The binary to run in syscall emulation mode.
  -o OPTIONS, --options=OPTIONS
                        The options to pass to the binary, use " "
                        around the entire string
  -e ENV, --env=ENV     Initialize workload environment from text file.
  -i INPUT, --input=INPUT
                        Read stdin from a file.
  --output=OUTPUT       Redirect stdout to a file.
  --errout=ERROUT       Redirect stderr to a file.
  --ruby-clock=RUBY_CLOCK
                        Clock for blocks running at Ruby system's speed
  --access-backing-store
                        Should ruby maintain a second copy of memory
  --ports=PORTS         used of transitions per cycle which is a proxy
                        for the number of ports.
  --topology=TOPOLOGY   check configs/topologies for complete set
  --mesh-rows=MESH_ROWS
                        the number of rows in the mesh topology
  --garnet-network=GARNET_NETWORK
                        'fixed'|'flexible'
  --network-fault-model
                        enable network fault model: see
                        src/mem/ruby/network/fault_model/
  --numa-high-bit=NUMA_HIGH_BIT
                        high order address bit to use for numa mapping. 0 =
                        highest bit, not specified = lowest bit
  --recycle-latency=RECYCLE_LATENCY
                        Recycle latency for ruby controller input buffers
  --random_seed=RANDOM_SEED
                        Used for seeding the random number generator
  --allow-atomic-migration
                        allow migratory sharing for atomic only accessed
                        blocks
  --pf-on               Hammer: enable Probe Filter
  --dir-on              Hammer: enable Full-bit Directory
